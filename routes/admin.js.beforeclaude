const express = require('express');
const path = require('path');
const fs = require('fs');
const router = express.Router();

const logFilePath = path.join(__dirname, '..', 'logs', 'logs.json');

function ensureAdmin(req, res, next) {
  if (req.isAuthenticated && req.isAuthenticated() && req.user?.isAdmin) {
    return next();
  }
  res.status(403).send('Forbidden - Admins only');
}

// Admin dashboard page
router.get('/', ensureAdmin, (req, res) => {
  res.render('admin', {
    title: 'Admin Panel',
    user: req.user,
    isAdmin: req.user.isAdmin,
  });
});

router.get('/logs', ensureAdmin, (req, res, next) => {
  console.log('User:', req.user);
  console.log('Reading log file from:', logFilePath);

  fs.readFile(logFilePath, 'utf8', (err, data) => {
    if (err) {
      console.error('Error reading log file:', err.stack || err);
      return next(err);
    }
    console.log('Log file read successful');

    let logs = [];
    try {
      logs = JSON.parse(data);
    } catch (parseErr) {
      console.error('Error parsing log JSON:', parseErr);
      // You can flash an error or just continue with empty logs
    }

    res.render('admin-logs', {
      title: 'System Logs',
      user: req.user,
      isAdmin: req.user.isAdmin,
      logs: logs,
    });
  });
});

router.get('/test', ensureAdmin, (req, res) => {
  res.render('test', {
    title: 'Test Page',
    user: req.user,
    isAdmin: req.user.isAdmin,
    message: 'If you see this, rendering works!',
  });
});

module.exports = router;

