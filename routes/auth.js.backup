const express = require('express');
const passport = require('passport');
const router = express.Router();
const users = require('../models/user');
const { logEvent } = require('../utils/logger'); // Import logger

// Local login
router.post('/login', (req, res, next) => {
  const { username, password } = req.body;
  if (!users.validatePassword(username, password)) {
    logEvent({
      type: 'auth',
      message: `Failed login attempt for user ${username}`,
      user: username
    });
    req.flash('error', 'Invalid username or password.');
    return res.redirect('/login');
  }
  const user = users.findByUsername(username);
  req.login(user, err => {
    if (err) return next(err);
    logEvent({
      type: 'auth',
      message: 'Local login successful',
      user: user.username
    });
    res.redirect('/dashboard');
  });
});

// Local logout
router.get('/logout', (req, res) => {
  if (req.user) {
    logEvent({
      type: 'auth',
      message: 'User logged out',
      user: req.user.username || req.user.email || 'unknown'
    });
  }
  req.logout(err => {
    if (err) console.error(err);
    res.redirect('/login');
  });
});

// SAML login
router.get('/saml/login', passport.authenticate('saml'));

// SAML callback
router.post('/saml/acs',
  passport.authenticate('saml', {
    failureRedirect: '/login',
    failureFlash: true
  }),
  (req, res) => {
    const profile = req.user;

    // Enhance user object
    req.user.username = profile.nameID;
    req.user.email = profile.email || '';
    req.user.firstName = profile.firstName || '';
    req.user.lastName = profile.lastName || '';
    req.user.displayName = profile.displayName || profile.cn || profile.nameID;
    req.user.manager = profile.manager || '';
    req.user.authType = 'saml';
    req.user.samlAssertion = profile.getAssertionXml && profile.getAssertionXml();

    logEvent({
      type: 'saml',
      message: 'SAML login successful',
      user: req.user.email || req.user.username
    });

    res.redirect('/dashboard');
  }
);

module.exports = router;

